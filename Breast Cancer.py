# -*- coding: utf-8 -*-
"""Untitled11.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1xmk7Ns3T_rNy84BGQOXIH3H3y2dPYxg9

MADHUSREE.BANDI

Z23687873

Datascience Project

Importing Packages
"""

from sklearn import datasets
from sklearn.cluster import KMeans, DBSCAN, AgglomerativeClustering
from sklearn.decomposition import PCA
import matplotlib.pyplot as plt

"""Part 1 Loading breast cancer data set"""

breast_cancer = datasets.load_breast_cancer()
B_ca = breast_cancer.data

pca_2feature = PCA(2)
df = pca_2feature.fit_transform(B_ca)

# Applying K means algorithm 

kmn =  KMeans(n_clusters = 10)
label = kmn.fit_predict(df)

for i in range(10):
    plt.scatter(df[label==i,0],df[label==i,1], label = i)
plt.legend()
plt.show()

"""2) Loading digits for density based clustering"""

digits = datasets.load_digits()
DIG_data = digits.data

pcomp_2feature = PCA(2)
dfbc = pcomp_2feature.fit_transform(DIG_data)

#DBSCAN Clustering
dbscan =  DBSCAN(min_samples=10, eps=1.5)
label = dbscan.fit_predict(dfbc)
#takiing different colors
colors_plotting = ['black','silver','maroon', 'bisque', 'burlywood', 'linen', 'gold', 'yellowgreen', 'ivory',
            'green', 'lime', 'azure', 'plum', 'indigo', 'fuchsia',
            'orchid', 'navy', 'thistle', 'seagreen', 'tan', 'beige', 'slateblue', 'cornflowerblue', 'cadetblue' ]
#plotting for labels 
for i in range(23):
    plt.scatter(dfbc[label==i,0],dfbc[label==i,1], color = colors_plotting[i], label = i)
plt.legend( loc='right', bbox_to_anchor=(2.0, 0.5), ncol=5)
plt.show()

"""3) Loading iris dataset for Agglomerative clustering"""

iris = datasets.load_iris()
IR_data=iris.data

pcomp_2feature = PCA(2)
df = pcomp_2feature.fit_transform(IR_data)


#Agglomerative clustering

AGG =  AgglomerativeClustering(n_clusters = 5)
label = AGG.fit_predict(df)

for x in range(5):
    plt.scatter(df[label==x,0],df[label==x,1], label = x+1)
plt.legend()
plt.show()

"""4)Loading digit datasets"""

digits = datasets.load_digits()
DIGI_data = digits.data
pcomp_2feature = PCA(2)
dfdg = pca_2feature.fit_transform(DIGI_data)

#performing K mean clustering
kmn =  KMeans(n_clusters = 20)
label = kmn.fit_predict(dfdg)

#printing 20 plots for kmeans clusters
colors_plotting = ['black','silver','maroon', 'bisque', 'burlywood', 'linen', 'gold', 'yellowgreen', 'ivory',
            'green', 'lime', 'azure', 'plum', 'indigo', 'fuchsia',
            'orchid', 'navy', 'thistle', 'seagreen', 'tan', 'beige', 'slateblue', 'cornflowerblue', 'cadetblue' ]
for i in range(20):
    plt.scatter(dfdg[label==i,0],dfdg[label==i,1], label = i, color = colors_plotting[i])
plt.legend( loc='right', bbox_to_anchor=(2.1, 0.1), ncol=5)
plt.show()

"""performing Agglomerative clustering"""

AGG1 =  AgglomerativeClustering(n_clusters = 20)
label = AGG1.fit_predict(dfdg)

#printing plots for 20 colors for agg clustering
colors_plotting = ['black','silver','maroon', 'bisque', 'burlywood', 'linen', 'gold', 'yellowgreen', 'ivory',
            'green', 'lime', 'azure', 'plum', 'indigo', 'fuchsia',
            'orchid', 'navy', 'thistle', 'seagreen', 'tan', 'beige', 'slateblue', 'cornflowerblue', 'cadetblue' ]
for i in range(20):
    plt.scatter(dfdg[label==i,0],dfdg[label==i,1], label = i, color = colors_plotting[i])
plt.legend( loc='right', bbox_to_anchor=(2.1, 0.1), ncol=5)
plt.show()